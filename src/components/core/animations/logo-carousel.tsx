'use client'

import React, {
	useCallback,
	useEffect,
	useMemo,
	useState,
	type SVGProps,
} from 'react'
import { AnimatePresence, motion } from 'motion/react'

// Define the structure for our logo objects
interface Logo {
	name: string
	id: number
	img: React.ComponentType<React.SVGProps<SVGSVGElement>>
}

// Utility function to randomly shuffle an array
// This is used to mix up the order of logos for a more dynamic display
const shuffleArray = <T,>(array: T[]): T[] => {
	const shuffled = [...array]
	for (let i = shuffled.length - 1; i > 0; i--) {
		const j = Math.floor(Math.random() * (i + 1))
		;[shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]]
	}
	return shuffled
}

// Utility function to distribute logos across multiple columns
// This ensures each column has a balanced number of logos
const distributeLogos = (allLogos: Logo[], columnCount: number): Logo[][] => {
	const shuffled = shuffleArray(allLogos)
	const columns: Logo[][] = Array.from({ length: columnCount }, () => [])

	// Distribute logos evenly across columns
	shuffled.forEach((logo, index) => {
		columns[index % columnCount].push(logo)
	})

	// Ensure all columns have the same number of logos by filling shorter columns
	const maxLength = Math.max(...columns.map((col) => col.length))
	columns.forEach((col) => {
		while (col.length < maxLength) {
			col.push(shuffled[Math.floor(Math.random() * shuffled.length)])
		}
	})

	return columns
}

// Props for the LogoColumn component
interface LogoColumnProps {
	logos: Logo[]
	index: number
	currentTime: number
}

// LogoColumn component: Displays a single column of animated logos
const LogoColumn: React.FC<LogoColumnProps> = React.memo(
	({ logos, index, currentTime }) => {
		const cycleInterval = 2000 // Time each logo is displayed (in milliseconds)
		const columnDelay = index * 200 // Stagger the start of each column's animation
		// Calculate which logo should be displayed based on the current time
		const adjustedTime =
			(currentTime + columnDelay) % (cycleInterval * logos.length)
		const currentIndex = Math.floor(adjustedTime / cycleInterval)

		// Memoize the current logo to prevent unnecessary re-renders
		const CurrentLogo = useMemo(
			() => logos[currentIndex].img,
			[logos, currentIndex]
		)

		return (
			// Motion component for the column container
			<motion.div
				className='w-24 h-14 md:w-48 md:h-24 overflow-hidden relative mx-auto'
				initial={{ opacity: 0, y: 50 }} // Start invisible and below final position
				animate={{ opacity: 1, y: 0 }} // Animate to full opacity and final position
				transition={{
					delay: index * 0.1, // Stagger the animation of each column
					duration: 0.7,
					ease: 'easeOut',
				}}>
				{/* AnimatePresence enables animation of components that are removed from the DOM */}
				<AnimatePresence mode='wait'>
					{/* Framer Motion component for each logo */}
					<motion.div
						key={`${logos[currentIndex].id}-${currentIndex}`}
						className='absolute inset-0 flex items-center justify-center'
						// Animation for when the logo enters
						initial={{
							y: '10%',
							opacity: 0,
							style: {
								filter: 'blur(8px)',
							},
						}}
						// Animation for when the logo is displayed
						animate={{
							y: '0%',
							opacity: 1,
							style: {
								filter: 'blur(0px)',
							},
							transition: {
								type: 'spring',
								stiffness: 300,
								damping: 40,
								mass: 1,
								bounce: 0.2,
								duration: 0.8,
							},
						}}
						// Animation for when the logo exits
						exit={{
							y: '-20%',
							opacity: 0,
							style: {
								filter: 'blur(16px)',
							},
							transition: {
								type: 'tween',
								ease: 'easeIn',
								duration: 0.3,
							},
						}}>
						<CurrentLogo className='w-20 h-20  object-contain' />
					</motion.div>
				</AnimatePresence>
			</motion.div>
		)
	}
)

// Main LogoCarousel component
function LogoCarousel({ columnCount = 2 }: { columnCount?: number }) {
	const [logoSets, setLogoSets] = useState<Logo[][]>([])
	const [currentTime, setCurrentTime] = useState(0)

	// Memoize the array of logos to prevent unnecessary re-renders
	const allLogos: Logo[] = useMemo(
		() => [
			{ name: 'Cloudflare', id: 1, img: CloudflareIcon },
			{ name: 'Meta', id: 2, img: MetaIcon },
			{ name: 'Intel', id: 3, img: IntelIcon },
			{ name: 'Shopify', id: 4, img: ShopifyIcon },
			{ name: 'Salesforce', id: 5, img: SalesforceIcon },
			{ name: 'Google', id: 6, img: GoogleIcon },
			{ name: 'Stripe', id: 7, img: StripeIcon },
			{ name: 'Mozilla', id: 8, img: MozillaIcon },
		],
		[]
	)

	// Distribute logos across columns when the component mounts
	useEffect(() => {
		const distributedLogos = distributeLogos(allLogos, columnCount)
		setLogoSets(distributedLogos)
	}, [allLogos])

	// Function to update the current time (used for logo cycling)
	const updateTime = useCallback(() => {
		setCurrentTime((prevTime) => prevTime + 100)
	}, [])

	// Set up an interval to update the time every 100ms
	useEffect(() => {
		const intervalId = setInterval(updateTime, 100)
		return () => clearInterval(intervalId)
	}, [updateTime])

	// Render the logo columns
	return (
		<div className='flex space-x-4'>
			{logoSets.map((logos, index) => (
				<LogoColumn
					key={index}
					logos={logos}
					index={index}
					currentTime={currentTime}
				/>
			))}
		</div>
	)
}

function CloudflareIcon(props: SVGProps<SVGSVGElement>) {
	return (
		<svg
			width='200'
			height='67'
			viewBox='0 0 200 67'
			fill='none'
			xmlns='http://www.w3.org/2000/svg'
			{...props}>
			<g clipPath='url(#clip0_132_7)'>
				<path
					d='M166.075 40.2463C166.392 39.4061 166.504 38.5021 166.401 37.6098C166.298 36.7175 165.984 35.8628 165.483 35.1169C164.969 34.5006 164.339 33.9917 163.628 33.6193C162.918 33.2469 162.14 33.0184 161.341 32.9467L127.022 32.5522C126.824 32.5522 126.627 32.3549 126.43 32.3549C126.384 32.3204 126.347 32.2757 126.321 32.2244C126.295 32.173 126.282 32.1164 126.282 32.059C126.282 32.0015 126.295 31.9449 126.321 31.8935C126.347 31.8422 126.384 31.7975 126.43 31.763C126.627 31.3685 126.824 31.1712 127.219 31.1712L161.736 30.7766C163.927 30.5334 166.014 29.7106 167.782 28.393C169.55 27.0754 170.935 25.3104 171.795 23.2797L173.767 18.1503C173.767 17.953 173.964 17.7557 173.767 17.5585C172.695 12.781 170.093 8.48431 166.356 5.32122C162.619 2.15813 157.953 0.301582 153.065 0.0336903C148.177 -0.234201 143.335 1.10121 139.276 3.837C135.216 6.57278 132.16 10.5594 130.572 15.191C128.511 13.7186 125.997 13.02 123.471 13.2182C121.154 13.4766 118.993 14.5158 117.345 16.165C115.696 17.8142 114.657 19.9754 114.398 22.2933C114.267 23.4798 114.334 24.6798 114.596 25.8445C110.846 25.9481 107.285 27.511 104.669 30.2006C102.054 32.8902 100.591 36.4944 100.592 40.2463C100.559 40.9753 100.626 41.7053 100.789 42.4165C100.798 42.5705 100.863 42.7158 100.972 42.8249C101.081 42.934 101.227 42.9993 101.381 43.0083H164.694C165.089 43.0083 165.483 42.811 165.483 42.4165L166.075 40.2463Z'
					fill='white'
				/>
				<path
					d='M176.923 18.1503H175.937C175.74 18.1503 175.542 18.3476 175.345 18.5449L173.964 23.2797C173.647 24.12 173.535 25.024 173.638 25.9162C173.741 26.8085 174.056 27.6633 174.556 28.4092C175.07 29.0255 175.7 29.5344 176.411 29.9067C177.122 30.2791 177.899 30.5077 178.698 30.5793L185.996 30.9739C186.193 30.9739 186.391 31.1712 186.588 31.1712C186.634 31.2056 186.671 31.2503 186.697 31.3017C186.722 31.353 186.736 31.4097 186.736 31.4671C186.736 31.5245 186.722 31.5812 186.697 31.6325C186.671 31.6839 186.634 31.7286 186.588 31.763C186.391 32.1576 186.193 32.3549 185.799 32.3549L178.304 32.7494C176.112 32.9927 174.025 33.8154 172.257 35.1331C170.49 36.4507 169.104 38.2156 168.245 40.2463L167.85 42.0219C167.653 42.2192 167.85 42.6137 168.245 42.6137H194.28C194.36 42.6252 194.442 42.6178 194.519 42.5921C194.596 42.5665 194.666 42.5232 194.724 42.4658C194.781 42.4083 194.825 42.3383 194.85 42.2613C194.876 42.1842 194.883 42.1023 194.872 42.0219C195.341 40.3503 195.606 38.6279 195.661 36.8924C195.629 31.9314 193.645 27.1824 190.138 23.6743C186.631 20.1662 181.883 18.1816 176.923 18.1503'
					fill='white'
				/>
				<path
					d='M198.225 53.6617C197.874 53.6617 197.531 53.5576 197.239 53.3625C196.947 53.1674 196.719 52.8901 196.585 52.5657C196.45 52.2412 196.415 51.8842 196.484 51.5398C196.552 51.1953 196.721 50.879 196.97 50.6307C197.218 50.3823 197.534 50.2132 197.879 50.1447C198.223 50.0762 198.58 50.1114 198.904 50.2458C199.229 50.3801 199.506 50.6077 199.701 50.8997C199.896 51.1917 200 51.535 200 51.8862C200.001 52.1196 199.956 52.3509 199.867 52.5668C199.778 52.7827 199.647 52.9788 199.482 53.1439C199.317 53.3089 199.121 53.4397 198.905 53.5286C198.69 53.6175 198.458 53.6627 198.225 53.6617ZM198.225 50.5052C197.952 50.5052 197.685 50.5862 197.458 50.7379C197.231 50.8897 197.054 51.1053 196.949 51.3577C196.845 51.61 196.817 51.8877 196.871 52.1556C196.924 52.4235 197.055 52.6696 197.249 52.8627C197.442 53.0558 197.688 53.1874 197.955 53.2406C198.223 53.2939 198.501 53.2666 198.753 53.1621C199.005 53.0575 199.221 52.8805 199.373 52.6534C199.525 52.4263 199.606 52.1593 199.606 51.8862C199.61 51.7036 199.577 51.522 199.509 51.3525C199.442 51.1829 199.34 51.0289 199.211 50.8997C199.082 50.7706 198.928 50.6691 198.758 50.6012C198.589 50.5334 198.407 50.5007 198.225 50.5052V50.5052ZM199.014 52.8726H198.619L198.225 52.2807H197.83V52.8726H197.436V51.097H198.422C198.502 51.0855 198.584 51.0929 198.661 51.1186C198.738 51.1443 198.808 51.1876 198.866 51.245C198.923 51.3024 198.967 51.3724 198.992 51.4495C199.018 51.5265 199.025 51.6085 199.014 51.6889C199.014 51.8862 198.817 52.0835 198.619 52.2807L199.014 52.8726V52.8726ZM198.422 51.8862C198.619 51.8862 198.619 51.8862 198.619 51.6889C198.62 51.6628 198.615 51.6369 198.605 51.6127C198.596 51.5886 198.581 51.5666 198.563 51.5482C198.544 51.5297 198.522 51.5152 198.498 51.5055C198.474 51.4958 198.448 51.491 198.422 51.4916H197.83V52.0835H198.422V51.8862ZM21.499 50.1106H25.8383V61.9477H33.3333V65.6962H21.499V50.1106ZM37.8698 57.8047C37.8699 56.7089 38.0923 55.6244 38.5236 54.6171C38.955 53.6097 39.5862 52.7004 40.3791 51.9442C41.172 51.1879 42.1102 50.6005 43.1367 50.2176C44.1632 49.8346 45.2567 49.6639 46.3511 49.716C47.4352 49.6672 48.5179 49.8415 49.532 50.2281C50.546 50.6147 51.47 51.2055 52.2465 51.9637C53.0231 52.722 53.6358 53.6317 54.0467 54.6364C54.4575 55.6411 54.6578 56.7195 54.6351 57.8047C54.635 58.9006 54.4126 59.985 53.9813 60.9924C53.55 61.9998 52.9187 62.9091 52.1258 63.6653C51.3329 64.4216 50.3948 65.0089 49.3683 65.3919C48.3418 65.7749 47.2482 65.9455 46.1538 65.8935C45.0739 65.9256 43.9986 65.7398 42.992 65.3471C41.9854 64.9545 41.0681 64.3631 40.295 63.6082C39.5219 62.8533 38.9087 61.9504 38.492 60.9533C38.0754 59.9562 37.8638 58.8854 37.8698 57.8047ZM50.2959 57.8047C50.3345 57.2578 50.2619 56.7088 50.0824 56.1907C49.9029 55.6727 49.6203 55.1964 49.2515 54.7907C48.8828 54.385 48.4357 54.0583 47.9372 53.8304C47.4386 53.6024 46.8991 53.4779 46.3511 53.4645C45.2875 53.5164 44.2847 53.9755 43.5503 54.7468C42.8159 55.5181 42.4063 56.5424 42.4063 57.6075C42.4063 58.6726 42.8159 59.6968 43.5503 60.4681C44.2847 61.2394 45.2875 61.6985 46.3511 61.7505C48.718 62.145 50.2959 60.1722 50.2959 57.8047ZM59.9606 58.7912V50.1106H64.2998V58.7912C64.2998 60.9613 65.4832 62.145 67.2584 62.145C67.673 62.1795 68.09 62.1198 68.4782 61.9703C68.8665 61.8209 69.2159 61.5856 69.5005 61.282C69.785 60.9785 69.9972 60.6145 70.1213 60.2173C70.2454 59.8201 70.2781 59.4001 70.217 58.9885V50.1106H74.5562V58.7912C74.5562 63.9206 71.5976 66.0907 67.2584 66.0907C62.7219 65.8935 59.9606 63.7233 59.9606 58.7912V58.7912ZM81.0651 50.1106H87.1795C92.7022 50.1106 96.0552 53.2672 96.0552 57.8047C96.0552 62.3423 92.7022 65.6962 87.1795 65.6962H81.2623V50.1106H81.0651ZM87.1795 61.7505C87.7291 61.8029 88.2837 61.7399 88.8075 61.5655C89.3314 61.3911 89.8131 61.1091 90.2216 60.7376C90.6302 60.3661 90.9566 59.9133 91.18 59.4082C91.4033 58.9032 91.5187 58.357 91.5187 57.8047C91.5187 57.2525 91.4033 56.7063 91.18 56.2012C90.9566 55.6962 90.6302 55.2434 90.2216 54.8719C89.8131 54.5004 89.3314 54.2184 88.8075 54.044C88.2837 53.8695 87.7291 53.8066 87.1795 53.859H85.4043V61.7505H87.1795ZM102.17 50.1106H114.596V53.859H106.509V56.4237H113.807V59.9749H106.509V65.6962H102.17V50.1106ZM120.71 50.1106H125.049V61.9477H132.544V65.6962H120.71V50.1106ZM143.787 49.9133H148.126L154.832 65.6962H150.099L148.915 62.9342H142.801L141.617 65.6962H137.081L143.787 49.9133ZM147.732 59.5803L145.957 55.24L144.181 59.5803H147.732ZM160.355 50.1106H167.653C168.584 50.035 169.521 50.1538 170.403 50.4595C171.286 50.7652 172.096 51.251 172.781 51.8862C173.346 52.4956 173.756 53.2322 173.977 54.0337C174.197 54.8352 174.221 55.678 174.047 56.4907C173.873 57.3035 173.506 58.0624 172.976 58.7032C172.447 59.344 171.771 59.8479 171.006 60.1722L174.753 65.6962H169.822L166.667 60.9613H164.694V65.6962H160.355V50.1106ZM167.456 57.6075C168.836 57.6075 169.822 56.8183 169.822 55.8319C169.822 54.6482 168.836 54.0563 167.456 54.0563H164.694V57.8047H167.456V57.6075ZM180.276 50.1106H192.899V53.6617H184.615V56.0292H192.11V59.5803H184.615V61.9477H193.097V65.6962H180.276V50.1106ZM12.0316 59.7776C11.7341 60.4748 11.2398 61.0701 10.6092 61.4906C9.97861 61.9111 9.23911 62.1385 8.48126 62.145C7.41769 62.0931 6.41485 61.6339 5.68047 60.8627C4.9461 60.0914 4.53649 59.0671 4.53649 58.002C4.53649 56.9369 4.9461 55.9127 5.68047 55.1414C6.41485 54.3701 7.41769 53.911 8.48126 53.859C9.28788 53.8745 10.0724 54.1256 10.7382 54.5812C11.404 55.0369 11.9222 55.6773 12.2288 56.4237H16.7653C16.3772 54.5339 15.332 52.8429 13.8154 51.6509C12.2987 50.459 10.4088 49.8433 8.48126 49.9133C7.39097 49.8778 6.30454 50.0599 5.28536 50.4489C4.26617 50.838 3.33465 51.4261 2.54515 52.1791C1.75565 52.932 1.12398 53.8347 0.686999 54.8345C0.250017 55.8342 0.0164749 56.911 1.14809e-06 58.002C-0.00607013 59.0827 0.20554 60.1535 0.622207 61.1506C1.03887 62.1477 1.65206 63.0506 2.42518 63.8055C3.19831 64.5604 4.11553 65.1518 5.12213 65.5444C6.12873 65.9371 7.20408 66.1229 8.28402 66.0907C10.1686 66.1035 12.0041 65.4906 13.5031 64.3482C15.0022 63.2058 16.0801 61.5983 16.568 59.7776H12.0316Z'
					fill='white'
				/>
			</g>
			<defs>
				<clipPath id='clip0_132_7'>
					<rect
						width='200'
						height='66.0943'
						fill='white'
						transform='translate(-0.000125885)'
					/>
				</clipPath>
			</defs>
		</svg>
	)
}

const StripeIcon = (props: SVGProps<SVGSVGElement>) => (
	<svg
		width='200'
		height='84'
		viewBox='0 0 200 84'
		fill='none'
		xmlns='http://www.w3.org/2000/svg'
		{...props}>
		<g clipPath='url(#clip0_132_9)'>
			<path
				fillRule='evenodd'
				clipRule='evenodd'
				d='M200 43C200 28.7778 193.111 17.5556 179.944 17.5556C166.722 17.5556 158.722 28.7778 158.722 42.8889C158.722 59.6111 168.167 68.0556 181.722 68.0556C188.333 68.0556 193.333 66.5556 197.111 64.4444V53.3333C193.333 55.2222 189 56.3889 183.5 56.3889C178.111 56.3889 173.333 54.5 172.722 47.9444H199.889C199.889 47.2222 200 44.3333 200 43ZM172.556 37.7222C172.556 31.4444 176.389 28.8333 179.889 28.8333C183.278 28.8333 186.889 31.4444 186.889 37.7222H172.556Z'
				fill='white'
			/>
			<path
				fillRule='evenodd'
				clipRule='evenodd'
				d='M137.278 17.5556C131.833 17.5556 128.333 20.1111 126.389 21.8889L125.667 18.4444H113.444V83.2222L127.333 80.2778L127.389 64.5556C129.389 66 132.333 68.0556 137.222 68.0556C147.167 68.0556 156.222 60.0556 156.222 42.4444C156.167 26.3333 147 17.5556 137.278 17.5556ZM133.944 55.8333C130.667 55.8333 128.722 54.6667 127.389 53.2222L127.333 32.6111C128.778 31 130.778 29.8889 133.944 29.8889C139 29.8889 142.5 35.5556 142.5 42.8333C142.5 50.2778 139.056 55.8333 133.944 55.8333Z'
				fill='white'
			/>
			<path
				fillRule='evenodd'
				clipRule='evenodd'
				d='M94.3333 14.2778L108.278 11.2778V0L94.3333 2.94444V14.2778Z'
				fill='white'
			/>
			<path d='M108.278 18.5H94.3333V67.1111H108.278V18.5Z' fill='white' />
			<path
				fillRule='evenodd'
				clipRule='evenodd'
				d='M79.3889 22.6111L78.5 18.5H66.5V67.1111H80.3889V34.1667C83.6667 29.8889 89.2222 30.6667 90.9444 31.2778V18.5C89.1667 17.8333 82.6667 16.6111 79.3889 22.6111Z'
				fill='white'
			/>
			<path
				fillRule='evenodd'
				clipRule='evenodd'
				d='M51.6111 6.44444L38.0556 9.33333L38 53.8333C38 62.0556 44.1667 68.1111 52.3889 68.1111C56.9444 68.1111 60.2778 67.2778 62.1111 66.2778V55C60.3333 55.7222 51.5556 58.2778 51.5556 50.0556V30.3333H62.1111V18.5H51.5556L51.6111 6.44444Z'
				fill='white'
			/>
			<path
				fillRule='evenodd'
				clipRule='evenodd'
				d='M14.0556 32.6111C14.0556 30.4444 15.8333 29.6111 18.7778 29.6111C23 29.6111 28.3333 30.8889 32.5556 33.1667V20.1111C27.9444 18.2778 23.3889 17.5556 18.7778 17.5556C7.5 17.5556 0 23.4444 0 33.2778C0 48.6111 21.1111 46.1667 21.1111 52.7778C21.1111 55.3333 18.8889 56.1667 15.7778 56.1667C11.1667 56.1667 5.27778 54.2778 0.61111 51.7222V64.9444C5.77778 67.1667 11 68.1111 15.7778 68.1111C27.3333 68.1111 35.2778 62.3889 35.2778 52.4444C35.2222 35.8889 14.0556 38.8333 14.0556 32.6111Z'
				fill='white'
			/>
		</g>
		<defs>
			<clipPath id='clip0_132_9'>
				<rect width='200' height='83.2222' fill='white' />
			</clipPath>
		</defs>
	</svg>
)

const GoogleIcon = (props: SVGProps<SVGSVGElement>) => (
	<svg
		width='201'
		height='67'
		viewBox='0 0 201 67'
		fill='none'
		xmlns='http://www.w3.org/2000/svg'
		{...props}>
		<path
			d='M85.708 35.2275C85.708 44.6995 78.2981 51.6797 69.2041 51.6797C60.1111 51.6797 52.7012 44.6995 52.7012 35.2275C52.7012 25.6885 60.1111 18.7754 69.2041 18.7754C78.2981 18.7754 85.708 25.6885 85.708 35.2275ZM78.4829 35.2275C78.4829 29.3085 74.1891 25.2583 69.2041 25.2583C64.2201 25.2583 59.9248 29.3085 59.9248 35.2275C59.9248 41.0875 64.2191 45.1963 69.2041 45.1963C74.1891 45.1963 78.4829 41.0795 78.4829 35.2275Z'
			fill='white'
		/>
		<path
			d='M121.311 35.2275C121.311 44.6995 113.901 51.6797 104.808 51.6797C95.7141 51.6797 88.3042 44.6995 88.3042 35.2275C88.3042 25.6965 95.7141 18.7754 104.808 18.7754C113.901 18.7754 121.311 25.6885 121.311 35.2275ZM114.086 35.2275C114.086 29.3085 109.792 25.2583 104.807 25.2583C99.8221 25.2583 95.5278 29.3085 95.5278 35.2275C95.5278 41.0875 99.8221 45.1963 104.807 45.1963C109.792 45.1963 114.086 41.0795 114.086 35.2275Z'
			fill='white'
		/>
		<path
			d='M155.431 19.7695V49.3057C155.431 61.4557 148.265 66.4175 139.795 66.4175C131.821 66.4175 127.023 61.0847 125.212 56.7227L131.503 54.1035C132.623 56.7815 135.367 59.9414 139.788 59.9414C145.21 59.9414 148.57 56.5963 148.57 50.2983V47.9316H148.318C146.701 49.9276 143.585 51.6694 139.655 51.6694C131.429 51.6694 123.893 44.5047 123.893 35.2847C123.893 25.9987 131.429 18.7734 139.655 18.7734C143.578 18.7734 146.694 20.5166 148.318 22.4526H148.57V19.7744H155.431V19.7695ZM149.082 35.2866C149.082 29.4946 145.218 25.2583 140.3 25.2583C135.316 25.2583 131.14 29.4936 131.14 35.2866C131.14 41.0206 135.316 45.1963 140.3 45.1963C145.218 45.1963 149.082 41.0206 149.082 35.2866Z'
			fill='white'
		/>
		<path d='M166.743 2.45703V50.6699H159.696V2.45703H166.743Z' fill='white' />
		<path
			d='M194.201 40.6416L199.809 44.3794C197.999 47.0574 193.638 51.6704 186.101 51.6704C176.755 51.6704 169.775 44.4467 169.775 35.2197C169.775 25.4367 176.815 18.7676 185.292 18.7676C193.829 18.7676 198.006 25.5614 199.371 29.2324L200.12 31.1025L178.127 40.2114C179.811 43.5114 182.43 45.1953 186.101 45.1953C189.781 45.1953 192.333 43.3846 194.201 40.6416ZM176.941 34.7217L191.642 28.6167C190.834 26.5627 188.401 25.1313 185.538 25.1313C181.867 25.1313 176.756 28.3727 176.941 34.7217Z'
			fill='white'
		/>
		<path
			d='M26.0278 30.9468V23.9678H49.5488C49.7788 25.1838 49.8979 26.6232 49.8979 28.1802C49.8979 33.4172 48.466 39.8919 43.853 44.5059C39.366 49.1789 33.6321 51.6709 26.0371 51.6709C11.9591 51.6709 0.121094 40.204 0.121094 26.126C0.121094 12.048 11.9591 0.581055 26.0371 0.581055C33.8251 0.581055 39.373 3.63712 43.542 7.62012L38.6172 12.5449C35.6282 9.74192 31.5778 7.56104 26.0298 7.56104C15.7498 7.56104 7.70898 15.846 7.70898 26.127C7.70898 36.407 15.7498 44.6929 26.0298 44.6929C32.6978 44.6929 36.4962 42.015 38.9292 39.582C40.9022 37.609 42.1999 34.7899 42.7119 30.9409L26.0278 30.9468Z'
			fill='white'
		/>
	</svg>
)

const IntelIcon = (props: SVGProps<SVGSVGElement>) => (
	<svg
		version='1.1'
		id='Layer_2'
		xmlns='http://www.w3.org/2000/svg'
		x='0px'
		y='0px'
		viewBox='0 0 395.4 155.9'
		className='invert fill-white'
		fill='inherit'
		{...props}>
		<rect x='4.7' y='5.2' width='28.1' height='28.1' fill='white' />
		<path
			d='M32.1,151.6V50.3H5.4v101.2H32.1z M208.9,152.6v-24.8c-3.9,0-7.2-0.2-9.6-0.6c-2.8-0.4-4.9-1.4-6.3-2.8
  c-1.4-1.4-2.3-3.4-2.8-6.1c-0.4-2.5-0.6-5.8-0.6-9.8V73.2h19.3V50.3h-19.3V10.9h-26.7v97.9c0,8.3,0.7,15.3,2.1,20.9
  c1.4,5.5,3.8,10,7.1,13.4c3.3,3.4,7.7,5.8,13,7.3c5.4,1.5,12.2,2.2,20.3,2.2H208.9z M361.7,151.6V3.1h-26.7v148.5H361.7z
   M137.2,60.3c-7.4-8-17.8-12-31-12c-6.4,0-12.3,1.3-17.5,3.9C83.4,54.8,79,58.4,75.4,63L74,64.9l0-1.7V50.3H47.7v101.2h26.5V97.6
  l0,3.7c0-0.6,0-1.2,0-1.8c0.3-9.5,2.6-16.5,7-21c4.7-4.8,10.4-7.2,16.9-7.2c7.7,0,13.6,2.4,17.5,7c3.8,4.6,5.8,11.1,5.8,19.4l0,0V98
  c0,0,0,0,0,0l0,0l0,53.5h26.9V94.1C148.4,79.7,144.6,68.3,137.2,60.3z M321.2,100.8c0-7.3-1.3-14.1-3.8-20.5
  c-2.6-6.3-6.2-11.9-10.7-16.7c-4.6-4.8-10.1-8.5-16.5-11.2c-6.4-2.7-13.5-4-21.2-4c-7.3,0-14.2,1.4-20.6,4.1
  c-6.4,2.8-12,6.5-16.7,11.2c-4.7,4.7-8.5,10.3-11.2,16.7c-2.8,6.4-4.1,13.3-4.1,20.6c0,7.3,1.3,14.2,3.9,20.6
  c2.6,6.4,6.3,12,10.9,16.7c4.6,4.7,10.3,8.5,16.9,11.2c6.6,2.8,13.9,4.2,21.7,4.2c22.6,0,36.6-10.3,45-19.9l-19.2-14.6
  c-4,4.8-13.6,11.3-25.6,11.3c-7.5,0-13.7-1.7-18.4-5.2c-4.7-3.4-7.9-8.2-9.6-14.1l-0.3-0.9h79.5V100.8z M241.9,91.5
  c0-7.4,8.5-20.3,26.8-20.4c18.3,0,26.9,12.9,26.9,20.3L241.9,91.5z M392.1,138.8c-0.5-1.2-1.2-2.2-2.1-3.1c-0.9-0.9-1.9-1.6-3.1-2.1
  c-1.2-0.5-2.5-0.8-3.8-0.8c-1.4,0-2.6,0.3-3.8,0.8c-1.2,0.5-2.2,1.2-3.1,2.1c-0.9,0.9-1.6,1.9-2.1,3.1c-0.5,1.2-0.8,2.5-0.8,3.8
  c0,1.4,0.3,2.6,0.8,3.8s1.2,2.2,2.1,3.1c0.9,0.9,1.9,1.6,3.1,2.1c1.2,0.5,2.5,0.8,3.8,0.8c1.4,0,2.6-0.3,3.8-0.8
  c1.2-0.5,2.2-1.2,3.1-2.1c0.9-0.9,1.6-1.9,2.1-3.1c0.5-1.2,0.8-2.5,0.8-3.8C392.9,141.3,392.6,140,392.1,138.8z M390.5,145.8
  c-0.4,1-1,1.9-1.7,2.6c-0.7,0.7-1.6,1.3-2.6,1.7c-1,0.4-2,0.6-3.2,0.6c-1.1,0-2.2-0.2-3.2-0.6c-1-0.4-1.9-1-2.6-1.7
  c-0.7-0.7-1.3-1.6-1.7-2.6c-0.4-1-0.6-2-0.6-3.2c0-1.1,0.2-2.2,0.6-3.2c0.4-1,1-1.9,1.7-2.6c0.7-0.7,1.6-1.3,2.6-1.7
  c1-0.4,2-0.6,3.2-0.6c1.1,0,2.2,0.2,3.2,0.6c1,0.4,1.9,1,2.6,1.7c0.7,0.7,1.3,1.6,1.7,2.6c0.4,1,0.6,2,0.6,3.2
  C391.1,143.8,390.9,144.8,390.5,145.8z M384.9,143.5c0.8-0.1,1.4-0.4,1.9-0.9c0.5-0.5,0.8-1.2,0.8-2.2c0-1.1-0.3-1.9-1-2.5
  c-0.6-0.6-1.7-0.9-3-0.9h-4.4v11.3h2.1v-4.6h1.5l2.8,4.6h2.2L384.9,143.5z M383.8,141.8c-0.3,0-0.6,0-1,0h-1.5v-3.2h1.5
  c0.3,0,0.6,0,1,0c0.3,0,0.6,0.1,0.9,0.2c0.3,0.1,0.5,0.3,0.6,0.5c0.2,0.2,0.2,0.5,0.2,0.9c0,0.4-0.1,0.7-0.2,0.9
  c-0.2,0.2-0.4,0.4-0.6,0.5C384.4,141.7,384.1,141.8,383.8,141.8z'
			fill='white'
		/>
	</svg>
)

function MetaIcon(props: SVGProps<SVGSVGElement>) {
	return (
		<svg
			width='201'
			height='42'
			viewBox='0 0 201 42'
			fill='none'
			xmlns='http://www.w3.org/2000/svg'
			{...props}>
			<path
				d='M31.3473 8.96585C32.2013 7.95185 32.9211 6.9926 33.7511 6.1426C34.8181 5.0496 35.896 3.9366 37.108 3.0176C41.576 -0.370396 47.102 -0.107646 51.631 3.61135C54.961 6.34735 57.1522 9.86838 58.6212 13.8604C60.7932 19.7574 61.67 25.812 60.442 32.042C59.788 35.362 58.335 38.2637 55.213 39.9737C51.302 42.1167 46.4212 41.4383 42.9752 38.3213C40.0762 35.6993 38.0811 32.3885 36.0641 29.1065C34.4591 26.4945 32.9203 23.839 31.3453 21.21C31.1403 20.866 30.8912 20.5513 30.5572 20.0703C30.1102 20.8083 29.7521 21.3963 29.3971 21.9873C26.9441 26.0693 24.5469 30.1849 22.0079 34.2139C21.1569 35.5659 19.9922 36.7342 18.8922 37.9102C13.7402 43.4232 3.41688 42.1483 0.904878 33.0723C-0.054122 29.6093 -0.0329618 26.1127 0.419038 22.5967C1.18204 16.6547 3.07504 11.1367 6.89804 6.43167C9.70004 2.98267 13.184 0.638932 17.817 0.628932C21.334 0.621932 24.3509 2.02664 26.9269 4.34964C28.1549 5.45564 29.2481 6.7113 30.3971 7.9053C30.7051 8.2243 30.9893 8.56285 31.3473 8.96585ZM34.5543 13.2256C34.7163 13.5706 34.7852 13.7674 34.8932 13.9414C37.9842 18.9464 41.0373 23.9756 44.1993 28.9346C45.1713 30.4606 46.3291 31.9075 47.6021 33.1905C49.6841 35.2865 52.9881 34.6083 54.1651 31.9033C54.5541 31.0103 54.7852 29.9993 54.8492 29.0283C55.1572 24.3003 54.5739 19.6815 52.9059 15.2305C51.8609 12.4445 50.4313 9.88767 48.1173 7.93167C45.6253 5.82567 42.5281 5.45388 40.0631 7.04788C37.6791 8.58688 36.0773 10.8526 34.5543 13.2256ZM27.4312 14.8028C25.8442 13.0228 24.3399 11.2728 22.7589 9.59475C22.2599 9.06475 21.5831 8.67848 20.9391 8.31448C18.4821 6.92648 15.8571 7.03857 13.7931 8.93557C12.4461 10.1736 11.2192 11.66 10.3302 13.253C7.59617 18.153 6.66485 23.4994 7.03085 29.0694C7.08685 29.9184 7.33823 30.7861 7.66123 31.5801C8.81223 34.4001 11.8312 35.277 14.2852 33.461C15.2022 32.781 16.0629 31.9379 16.7179 31.0069C18.8349 27.9949 20.8602 24.9167 22.8912 21.8457C24.3712 19.6037 25.8042 17.3308 27.4312 14.8028Z'
				fill='white'
			/>
			<path
				d='M79.812 11.8418C79.812 21.3148 79.812 30.787 79.812 40.376C77.736 40.376 75.7742 40.376 73.6602 40.376C73.6602 27.612 73.6602 14.8858 73.6602 2.00977C76.1542 2.00977 78.6482 2.00977 81.3062 2.00977C85.4972 9.57677 89.721 17.2021 94.082 25.0771C98.436 17.2111 102.655 9.58654 106.867 1.97754C109.409 1.97754 111.829 1.97754 114.355 1.97754C114.355 14.7925 114.355 27.4889 114.355 40.3389C112.343 40.3389 110.352 40.3389 108.186 40.3389C108.186 30.8269 108.186 21.332 108.186 11.835C108.089 11.813 107.993 11.7905 107.896 11.7695C104.264 18.2955 100.632 24.8245 96.9741 31.3975C94.9851 31.3975 93.0571 31.3975 91.0151 31.3975C87.3691 24.8455 83.7308 18.3046 80.0928 11.7656C79.9998 11.7906 79.907 11.8158 79.812 11.8418Z'
				fill='white'
			/>
			<path
				d='M194.221 40.3531C194.221 39.2251 194.221 38.1784 194.221 37.1324C194.092 37.0634 193.963 36.9934 193.834 36.9234C193.691 37.1684 193.593 37.4569 193.4 37.6529C188.211 42.9859 179.368 42.2123 174.82 36.0103C172.355 32.6503 171.582 28.8042 171.846 24.7252C172.062 21.3882 173.088 18.3375 175.198 15.6715C179.853 9.78145 189.225 9.51643 193.568 14.4224C193.672 14.5394 193.812 14.6265 194.067 14.8355C194.138 13.7935 194.2 12.8776 194.274 11.7906C196.236 11.7906 198.111 11.7906 200.12 11.7906C200.12 21.3086 200.12 30.7601 200.12 40.3521C198.205 40.3531 196.3 40.3531 194.221 40.3531ZM194.117 26.1431C194.117 25.1911 194.051 24.2327 194.133 23.2877C194.258 21.8567 193.724 20.6892 192.848 19.6422C190.633 16.9932 187.761 16.2019 184.467 16.8609C181.349 17.4869 179.507 19.5484 178.627 22.5054C178.077 24.3494 178.015 26.2378 178.311 28.1578C178.766 31.1208 179.951 33.6351 182.839 34.8101C185.822 36.0251 188.802 35.7302 191.439 33.7642C193.159 32.4832 194.391 30.8665 194.13 28.5035C194.043 27.7265 194.117 26.9311 194.117 26.1431Z'
				fill='white'
			/>
			<path
				d='M147.29 28.4565C140.07 28.4565 133.223 28.4565 126.374 28.4565C126.439 31.7205 129.312 35.3203 133.425 35.6343C136.783 35.8903 139.853 35.2119 142.43 32.8999C142.551 32.7909 142.696 32.7054 142.84 32.6284C142.909 32.5904 143 32.5981 143.248 32.5591C144.252 33.8001 145.311 35.1081 146.481 36.5561C145.717 37.1651 145.09 37.7533 144.381 38.2163C140.264 40.8953 135.768 41.7945 130.964 40.7905C124.557 39.4505 120.176 34.2602 119.798 27.7182C119.602 24.3082 120.056 21.035 121.709 17.977C126.088 9.87904 136.786 9.28599 141.983 13.729C144.696 16.048 146.179 19.0436 146.739 22.4956C147.042 24.3546 147.096 26.2555 147.29 28.4565ZM140.747 23.5991C141.053 19.8881 137.92 16.5846 134.035 16.4126C130.031 16.2346 126.452 19.5441 126.33 23.5991C131.141 23.5991 135.948 23.5991 140.747 23.5991Z'
				fill='white'
			/>
			<path
				d='M169.059 35.4385C169.059 36.9745 169.059 38.6017 169.059 40.3887C168.391 40.5447 167.724 40.8159 167.048 40.8369C165.194 40.8999 163.292 41.1157 161.49 40.8037C157.507 40.1157 155.085 37.396 154.604 33.377C154.413 31.779 154.372 30.1579 154.354 28.5469C154.319 25.1909 154.346 21.8335 154.34 18.4775C154.339 18.0745 154.295 17.6728 154.255 17.0068C152.388 17.0068 150.601 17.0068 148.747 17.0068C148.747 15.1468 148.747 13.5561 148.747 11.7881C150.6 11.7881 152.358 11.7881 154.351 11.7881C154.351 10.2741 154.351 8.92994 154.351 7.58594C154.351 6.23194 154.351 4.87995 154.351 3.41895C156.474 3.41895 158.395 3.41895 160.561 3.41895C160.561 6.13495 160.561 8.83052 160.561 11.7285C163.543 11.7285 166.283 11.7285 169.095 11.7285C169.095 13.5335 169.095 15.1329 169.095 17.0049C166.309 17.0049 163.574 17.0049 160.769 17.0049C160.706 17.6239 160.638 17.9838 160.637 18.3418C160.632 22.3628 160.636 26.3814 160.643 30.4004C160.644 30.8154 160.659 31.2296 160.701 31.6416C160.962 34.1626 162.214 35.3527 164.747 35.4307C166.144 35.4727 167.542 35.4385 169.059 35.4385Z'
				fill='white'
			/>
		</svg>
	)
}

function MozillaIcon(props: SVGProps<SVGSVGElement>) {
	return (
		<svg
			width='201'
			height='59'
			viewBox='0 0 201 59'
			fill='none'
			xmlns='http://www.w3.org/2000/svg'
			{...props}>
			<path
				d='M172.84 38.8262C172.84 40.4362 173.62 41.7158 175.779 41.7158C178.33 41.7158 181.049 39.8868 181.219 35.7158C180.049 35.5568 178.768 35.3867 177.609 35.3867C175.06 35.3867 172.84 36.1062 172.84 38.8262Z'
				fill='white'
			/>
			<path
				d='M74.7402 26.2363C71.0692 26.2363 68.7988 28.946 68.7988 33.666C68.7988 37.996 70.8002 41.3262 74.6802 41.3262C78.4002 41.3262 80.8398 38.3257 80.8398 33.5547C80.8388 28.5067 78.1202 26.2363 74.7402 26.2363Z'
				fill='white'
			/>
			<path
				d='M0.119141 0.826172V58.0156H200.121V0.826172H0.119141ZM58.3091 46.2666H47.8188V32.1768C47.8188 27.8468 46.3788 26.1865 43.5488 26.1865C40.1088 26.1865 38.7178 28.626 38.7178 32.126V40.8262H42.0488V46.2656H31.5688V32.1758C31.5688 27.8458 30.1289 26.1855 27.2979 26.1855C23.8589 26.1855 22.4692 28.625 22.4692 32.125V40.8252H27.2388V46.2646H11.9888V40.8252H15.3188V26.6758H11.9888V21.2363H22.4692V25.0059C23.9682 22.3469 26.5778 20.7363 30.0688 20.7363C33.6788 20.7363 37 22.4562 38.229 26.1162C39.619 22.7862 42.4492 20.7363 46.3882 20.7363C50.8792 20.7363 54.9902 23.4557 54.9902 29.3857V40.8252H58.3091V46.2666V46.2666ZM74.458 46.8164C66.749 46.8164 61.4189 42.1062 61.4189 34.1162C61.4189 26.7962 65.8581 20.7461 74.8491 20.7461C83.8291 20.7461 88.2178 26.7864 88.2178 33.7764C88.2178 41.7674 82.449 46.8164 74.458 46.8164ZM114.81 46.2666H92.9502L92.229 42.4961L105.99 26.6855H98.1699L97.061 30.5664L91.9009 30.0059L92.791 21.2354H114.761L115.322 25.0049L101.441 40.8252H109.542L110.702 36.9453L116.361 37.4951L114.81 46.2666ZM129.09 46.2666H121.599V37.2773H129.09V46.2666ZM129.09 30.2266H121.599V21.2471H129.09V30.2266ZM133.78 46.2666L144.599 8.09668H151.639L140.82 46.2666H133.78ZM148.3 46.2666L159.119 8.09668H166.17L155.35 46.2666H148.3ZM186.691 46.8164C183.36 46.8164 181.53 44.8772 181.201 41.8262C179.761 44.3762 177.21 46.8164 173.16 46.8164C169.55 46.8164 165.45 44.8663 165.45 39.6562C165.45 33.4963 171.39 32.0557 177.1 32.0557C178.49 32.0557 179.93 32.1064 181.21 32.2764V31.4463C181.21 28.8963 181.149 25.8457 177.1 25.8457C175.6 25.8457 174.44 25.9554 173.27 26.5664L172.459 29.3857L166.749 28.7764L167.729 23.0156C172.119 21.2446 174.329 20.7451 178.44 20.7451C183.819 20.7451 188.37 23.5254 188.37 29.2354V40.1055C188.37 41.5445 188.92 42.0439 190.089 42.0439C190.42 42.0439 190.749 41.984 191.14 41.874L191.18 45.6445C189.85 46.3755 188.241 46.8164 186.691 46.8164Z'
				fill='white'
			/>
		</svg>
	)
}

function SalesforceIcon(props: SVGProps<SVGSVGElement>) {
	return (
		<svg
			width='201'
			height='46'
			viewBox='0 0 201 46'
			fill='none'
			xmlns='http://www.w3.org/2000/svg'
			{...props}>
			<path
				d='M18.5762 27.9422C18.5762 32.6072 15.1911 35.5037 9.74613 35.5037C7.07213 35.5037 4.51619 35.0852 1.80619 33.6512C1.68819 33.5822 1.56925 33.514 1.44925 33.449C1.06325 33.229 0.676005 33.0112 0.293005 32.7342C0.283005 32.7212 0.269966 32.7082 0.252966 32.6912C0.172966 32.6152 0.0421886 32.4896 0.181189 32.1306L0.176794 32.1228L1.25004 29.1365C1.41904 28.6255 1.81086 28.7974 1.96586 28.8914C2.08486 28.9624 2.19179 29.0342 2.30179 29.1062L2.30326 29.1082C2.46626 29.2122 2.63483 29.3248 2.86283 29.4568C6.03483 31.4608 8.95994 31.4763 9.87894 31.4763C12.2389 31.4763 13.7129 30.218 13.7129 28.532V28.4383C13.7129 26.6053 11.45 25.9064 8.835 25.1004L8.25687 24.9217C4.66687 23.8977 0.823278 22.4149 0.823278 17.8679V17.7762C0.823278 13.4632 4.30503 10.448 9.29203 10.448L9.835 10.4451C12.762 10.4451 15.5931 11.2958 17.6411 12.5428C17.8281 12.6548 18.0088 12.87 17.9058 13.156C17.8068 13.43 16.897 15.8654 16.794 16.1414C16.601 16.6514 16.0733 16.3094 16.0733 16.3094C14.2883 15.3244 11.4958 14.5437 9.15482 14.5437C7.04882 14.5437 5.68119 15.6672 5.68119 17.1892V17.2801C5.68119 19.0561 8.01388 19.8191 10.7149 20.6951L11.1822 20.8445C14.7542 21.9675 18.5782 23.5374 18.5782 27.8504V27.9422H18.5762ZM40.9102 33.9422C40.9102 33.9422 40.3402 34.0976 39.8262 34.2146C38.5402 34.4936 37.2492 34.7445 35.9522 34.9685C34.4312 35.2255 32.8598 35.3582 31.2798 35.3582C29.7758 35.3582 28.4122 35.2181 27.2032 34.9431C25.9822 34.6711 24.9249 34.2097 24.0689 33.5877C23.2109 32.9637 22.5181 32.1355 22.0591 31.1775C21.5921 30.2115 21.354 29.0318 21.354 27.6648C21.354 26.3178 21.6313 25.1281 22.1783 24.1131C22.7173 23.1071 23.4831 22.2389 24.4121 21.5769C25.3391 20.9089 26.4212 20.4078 27.6202 20.0838C28.8112 19.7618 30.0898 19.5984 31.4058 19.5984C32.3728 19.5984 33.1822 19.6198 33.8072 19.6658L33.8208 19.7019C33.8208 19.7019 35.0409 19.8117 36.3579 20.0027V19.3523C36.3579 17.3033 35.9299 16.3293 35.0899 15.6863C34.2309 15.0243 32.9432 14.6912 31.2832 14.6912C31.2832 14.6912 27.5381 14.6417 24.5811 16.2517C24.4451 16.3327 24.3291 16.3787 24.3291 16.3787C24.3291 16.3787 23.9583 16.5087 23.8233 16.1287L22.729 13.2029C22.563 12.7769 22.8692 12.5896 22.8692 12.5896C24.2542 11.5046 27.6099 10.8533 27.6099 10.8533C28.7219 10.6293 30.5859 10.4724 31.7369 10.4724C34.8119 10.4724 37.1808 11.1853 38.8008 12.6013C40.4258 14.0153 41.2491 16.3074 41.2491 19.3924L41.2569 33.4412C41.2599 33.4392 41.2912 33.8472 40.9102 33.9422ZM51.232 34.4383C51.232 34.6973 51.047 34.907 50.792 34.907H46.71C46.451 34.907 46.2671 34.6973 46.2671 34.4383V1.59061C46.2671 1.33361 46.452 1.12674 46.71 1.12674H50.792C51.048 1.12674 51.232 1.33361 51.232 1.59061V34.4383ZM76.7471 23.7937C76.7441 23.8247 76.7413 23.8452 76.7403 23.8562C76.6973 24.2512 76.293 24.2537 76.293 24.2537L60.875 24.242C60.964 26.585 61.5301 28.233 62.6621 29.366C63.7741 30.47 65.5512 31.1754 67.9312 31.1804C71.2682 31.1884 72.8582 30.5741 73.9502 30.1541C74.0172 30.1291 74.085 30.1019 74.148 30.0779C74.184 30.0629 74.219 30.0508 74.252 30.0388C74.252 30.0388 74.678 29.8874 74.833 30.3074L75.8389 33.1258C76.0409 33.6008 75.878 33.7671 75.709 33.8621C74.753 34.3991 72.411 35.3891 67.962 35.4031C65.797 35.4101 63.9221 35.0988 62.3711 34.4988C60.8101 33.8948 59.5121 33.0344 58.4981 31.9334C57.4941 30.8394 56.74 29.5253 56.273 28.0213C55.808 26.5283 55.5743 24.8813 55.5743 23.1053C55.5743 21.3683 55.8011 19.7091 56.2481 18.1971C56.6971 16.6661 57.402 15.3291 58.336 14.1961C59.274 13.0651 60.4629 12.1609 61.8789 11.4939C63.2919 10.8329 65.038 10.5086 66.961 10.5086C68.476 10.5066 69.9771 10.8101 71.3711 11.4041C72.3361 11.8141 73.3019 12.5657 74.2979 13.6287C74.9209 14.3037 75.8831 15.7763 76.2701 17.2303L76.2788 17.2342C77.2068 20.4832 76.8121 23.3247 76.7471 23.7937ZM89.4561 35.4959C86.7821 35.4959 84.2262 35.0764 81.5132 33.6414C81.4792 33.6214 81.4433 33.6008 81.4073 33.5818C81.3243 33.5328 81.2398 33.4863 81.1548 33.4383C80.7688 33.2203 80.383 33.0014 80.002 32.7254C79.992 32.7124 79.979 32.7004 79.962 32.6844C79.881 32.6074 79.7492 32.4848 79.8882 32.1228L79.875 32.115L80.9483 29.1287C81.1063 28.6417 81.5651 28.8196 81.6641 28.8826C81.7291 28.9256 81.7931 28.9666 81.8521 29.0076C82.0651 29.1446 82.265 29.276 82.562 29.448C85.724 31.452 88.6572 31.4676 89.5772 31.4676C91.9362 31.4676 93.4121 30.2092 93.4121 28.5222V28.4285C93.4121 26.5955 91.1592 25.8976 88.5332 25.0916L87.9571 24.9129C84.3671 23.8889 80.522 22.4062 80.522 17.8592V17.7664C80.522 13.4534 84.0042 10.4392 88.9912 10.4392L89.5362 10.4383C92.4622 10.4383 95.2919 11.2859 97.3409 12.5349C97.5259 12.6459 97.709 12.8612 97.605 13.1472C97.517 13.4212 96.605 15.8566 96.502 16.1326C96.309 16.6436 95.7788 16.3006 95.7788 16.3006C93.9848 15.3156 91.2039 14.5349 88.8609 14.5349C86.7549 14.5349 85.3882 15.6575 85.3882 17.1785V17.2713C85.3882 19.0463 87.7199 19.8093 90.4219 20.6853L90.8902 20.8357C94.4712 21.9587 98.2862 23.5296 98.2862 27.8416V27.9324C98.2862 32.5994 94.8991 35.4959 89.4561 35.4959ZM116.395 14.6883C116.306 15.1533 115.879 15.1365 115.879 15.1365H110.81L107.342 34.7537C106.978 36.7837 106.523 38.5246 105.989 39.9256C105.45 41.3396 104.885 42.377 103.987 43.368C103.16 44.286 102.221 44.9643 101.144 45.3513C100.075 45.7393 98.7832 45.9383 97.3682 45.9383C96.6912 45.9383 95.9689 45.9254 95.1119 45.7234C94.4949 45.5784 94.1581 45.4743 93.7071 45.3113C93.5131 45.2443 93.3588 45.003 93.4678 44.699C93.5768 44.391 94.4829 41.8971 94.6109 41.5711C94.7689 41.1721 95.168 41.324 95.168 41.324L95.189 41.3318C95.452 41.4418 95.642 41.5226 96 41.5926C96.365 41.6666 96.861 41.7303 97.232 41.7303C97.904 41.7303 98.513 41.6465 99.045 41.4685C99.687 41.2525 100.06 40.8826 100.453 40.3806C100.858 39.8606 101.189 39.1471 101.526 38.1931C101.868 37.2261 102.176 35.9502 102.448 34.3982L105.899 15.1365H102.497C102.088 15.1365 101.957 14.9454 101.996 14.6394L102.57 11.4392C102.659 10.9752 103.087 10.992 103.087 10.992H106.58L106.768 9.94998C107.29 6.85998 108.331 4.51151 109.861 2.96951C111.403 1.41651 113.597 0.629668 116.381 0.629668C117.081 0.621668 117.781 0.676777 118.474 0.791777C118.987 0.881777 119.494 1.00311 119.995 1.15311C120.103 1.19511 120.399 1.34221 120.277 1.69021L119.1 4.91971C119.001 5.16371 118.934 5.31196 118.433 5.15896C118.308 5.12096 118.122 5.06758 117.645 4.96658C117.3 4.89458 116.844 4.83865 116.381 4.83865C115.82 4.83065 115.265 4.91096 114.728 5.07596C114.241 5.23596 113.8 5.51171 113.441 5.87771C113.056 6.26371 112.602 6.82625 112.361 7.52225C111.871 8.93725 111.637 10.4309 111.57 10.8689C111.557 10.9359 111.552 10.978 111.549 10.992H116.468C116.88 10.991 117.012 11.1831 116.971 11.4881L116.395 14.6883ZM138.854 27.8816C138.405 29.3946 137.711 30.7198 136.786 31.8318C135.858 32.9438 134.678 33.8346 133.292 34.4676C131.906 35.0996 130.268 35.4207 128.424 35.4207C126.581 35.4207 124.941 35.0996 123.546 34.4676C122.16 33.8336 120.98 32.9448 120.053 31.8318C119.126 30.7188 118.431 29.3936 117.986 27.8816C117.543 26.3786 117.317 24.7389 117.317 22.9929C117.317 21.2459 117.543 19.6073 117.986 18.1053C118.434 16.5933 119.13 15.2651 120.053 14.1531C120.98 13.0411 122.16 12.1488 123.546 11.5008C124.941 10.8528 126.57 10.5242 128.424 10.5242C130.278 10.5242 131.917 10.8508 133.302 11.5008C134.697 12.1448 135.867 13.0411 136.795 14.1531C137.723 15.2651 138.416 16.5933 138.863 18.1053H138.854C139.295 19.6073 139.521 21.2559 139.521 22.9929C139.521 24.7389 139.295 26.3786 138.854 27.8816ZM157.717 11.7342L157.726 11.6707C157.58 12.0897 156.829 14.1972 156.564 14.9002C156.464 15.1672 156.3 15.3482 156.003 15.3162C156.003 15.3162 155.12 15.1072 154.315 15.1072C153.617 15.1072 152.919 15.2062 152.248 15.4002C151.531 15.6222 150.879 16.0128 150.346 16.5418C149.784 17.0878 149.332 17.8494 148.999 18.8054C148.659 19.7694 148.49 21.3025 148.49 22.8445V34.3582C148.49 34.4812 148.441 34.5993 148.354 34.6863C148.266 34.7753 148.148 34.825 148.023 34.825H143.984C143.861 34.825 143.742 34.7753 143.655 34.6863C143.566 34.5993 143.517 34.4812 143.517 34.3582V11.4285C143.517 11.1715 143.703 10.9627 143.957 10.9627H147.899C148.159 10.9627 148.341 11.1715 148.341 11.4285L148.344 13.3025C148.927 12.5015 149.984 11.8096 150.937 11.3806C151.904 10.9456 152.977 10.621 154.91 10.741C155.914 10.804 157.223 11.0805 157.484 11.1785C157.536 11.1995 157.583 11.2303 157.624 11.2693C157.643 11.2873 157.661 11.3069 157.674 11.3289C157.683 11.3429 157.692 11.3549 157.699 11.3689C157.706 11.3819 157.711 11.394 157.718 11.408C157.741 11.46 157.749 11.5161 157.749 11.5711C157.749 11.6281 157.738 11.6832 157.717 11.7342ZM177.161 34.2176C175.444 34.8966 173.054 35.3689 170.722 35.3689C166.781 35.3689 163.757 34.2369 161.746 31.9929C159.735 29.7589 158.722 26.7063 158.722 22.9383C158.722 21.1923 158.97 19.5428 159.463 18.0418C159.961 16.5278 160.702 15.2007 161.677 14.0887C162.653 12.9767 163.881 12.0813 165.336 11.4363C166.79 10.7883 168.487 10.4607 170.399 10.4607C171.687 10.4607 172.829 10.5392 173.814 10.6902C174.867 10.8492 176.259 11.2268 176.849 11.4578C176.956 11.4988 177.252 11.645 177.133 11.992C176.845 12.804 176.618 13.4278 176.378 14.0818C176.262 14.4028 176.142 14.7305 176.01 15.0945C175.839 15.5635 175.484 15.409 175.484 15.409C173.98 14.937 172.546 14.7205 170.672 14.7205C168.43 14.7205 166.733 15.4831 165.628 16.9471C164.512 18.4281 163.888 20.3603 163.883 22.9363C163.872 25.7653 164.575 27.8532 165.834 29.1512C167.082 30.4492 168.839 31.1013 171.034 31.1013C171.923 31.1013 172.764 31.0416 173.52 30.9226C174.272 30.8066 174.979 30.5731 175.638 30.3201C175.638 30.3201 176.07 30.1526 176.219 30.5926H176.222L177.344 33.6765C177.488 34.0595 177.161 34.2176 177.161 34.2176ZM199.98 23.7937C199.976 23.8247 199.975 23.8452 199.974 23.8562C199.931 24.2512 199.525 24.2537 199.525 24.2537L184.111 24.242C184.199 26.585 184.764 28.233 185.896 29.366C187.006 30.47 188.774 31.1754 191.164 31.1804C194.501 31.1884 196.093 30.5741 197.182 30.1541C197.288 30.1141 197.39 30.0748 197.487 30.0388C197.487 30.0388 197.913 29.8874 198.067 30.3074L199.073 33.1258C199.272 33.6008 199.112 33.7671 198.94 33.8621C197.985 34.3991 195.643 35.3891 191.195 35.4031C189.038 35.4101 187.156 35.0988 185.605 34.4988C184.044 33.8948 182.745 33.0344 181.73 31.9334C180.716 30.8394 179.962 29.5253 179.496 28.0213C179.034 26.5283 178.799 24.8813 178.799 23.1053C178.799 21.3683 179.025 19.7091 179.475 18.1971C179.923 16.6661 180.627 15.3291 181.564 14.1961C182.5 13.0651 183.69 12.1609 185.103 11.4939C186.52 10.8329 188.265 10.5086 190.188 10.5086C191.702 10.5066 193.204 10.8101 194.598 11.4041C195.563 11.8141 196.53 12.5657 197.524 13.6287C198.149 14.3037 199.107 15.7763 199.495 17.2303L199.516 17.2342C200.441 20.4832 200.047 23.3247 199.98 23.7937ZM66.6011 14.5838C64.5811 14.5838 63.1452 15.3742 62.2002 16.8162C61.5712 17.7622 61.1692 18.9831 60.9512 20.4451L71.9283 20.4461C71.8243 19.0321 71.5461 17.7682 70.9131 16.8162C69.9561 15.3782 68.6191 14.5838 66.6011 14.5838ZM128.433 14.701C126.404 14.701 124.968 15.3917 124.024 16.8367C123.072 18.2917 122.588 20.3589 122.588 22.9929C122.588 25.6269 123.07 27.7155 124.024 29.1795C124.97 30.6285 126.415 31.3357 128.433 31.3357C130.453 31.3357 131.904 30.6237 132.863 29.1687C133.825 27.6957 134.315 25.6211 134.316 22.9871C134.315 20.3551 133.83 18.2887 132.863 16.8367C131.905 15.3997 130.461 14.701 128.433 14.701ZM36.3521 23.8513C34.9701 23.6383 33.5758 23.5199 32.1758 23.4969C29.0338 23.4579 27.6981 24.6092 27.7071 24.6082C26.7801 25.2612 26.3311 26.2368 26.3311 27.5828C26.3311 28.4408 26.488 29.1127 26.793 29.5847C26.992 29.8967 27.0772 30.0158 27.6812 30.4978L27.691 30.5027C27.68 30.4987 29.0663 31.5892 32.1993 31.4002C34.4033 31.2672 36.354 30.8465 36.354 30.8465H36.3521V23.8513V23.8513ZM60.9502 20.4461L60.9019 20.4451L60.9502 20.4461ZM189.824 14.5838C187.805 14.5838 186.367 15.3742 185.424 16.8162C184.796 17.7622 184.394 18.9831 184.176 20.4451L195.152 20.4461C195.048 19.0321 194.771 17.7682 194.137 16.8162C193.181 15.3782 191.845 14.5838 189.824 14.5838ZM184.176 20.4461L184.127 20.4451L184.176 20.4461Z'
				fill='white'
			/>
		</svg>
	)
}

const ShopifyIcon = (props: SVGProps<SVGSVGElement>) => (
	<svg
		width='104'
		height='30'
		viewBox='0 0 104 30'
		fill='none'
		xmlns='http://www.w3.org/2000/svg'
		{...props}>
		<g clipPath='url(#clip0_2293_256)'>
			<path
				d='M36.2416 16.4347C35.3608 15.9479 34.8972 15.5539 34.8972 14.9976C34.8972 14.279 35.5231 13.8386 36.5198 13.8386C37.6788 13.8386 38.6987 14.3254 38.6987 14.3254L39.51 11.8451C39.51 11.8451 38.7682 11.2656 36.5661 11.2656C33.5064 11.2656 31.3739 13.0273 31.3739 15.4843C31.3739 16.8751 32.3706 17.9414 33.6919 18.7063C34.7581 19.309 35.129 19.7494 35.129 20.3753C35.129 21.0475 34.5959 21.5806 33.5991 21.5806C32.1156 21.5806 30.7248 20.8157 30.7248 20.8157L29.8672 23.2959C29.8672 23.2959 31.1653 24.1536 33.321 24.1536C36.4734 24.1536 38.7219 22.6005 38.7219 19.819C38.7682 18.2891 37.6092 17.2228 36.2416 16.4347Z'
				fill='white'
			/>
			<path
				d='M48.8024 11.2194C47.2493 11.2194 46.044 11.9611 45.0936 13.0737L45.0473 13.0506L46.3917 6.00391H42.8684L39.4609 23.9219H42.9611L44.1201 17.8024C44.5837 15.4844 45.7658 14.0705 46.8785 14.0705C47.6666 14.0705 47.9679 14.6036 47.9679 15.3685C47.9679 15.8553 47.9216 16.4348 47.8057 16.9216L46.4844 23.9451H49.9846L51.3522 16.713C51.5144 15.948 51.6071 15.044 51.6071 14.4182C51.6535 12.4015 50.6336 11.2194 48.8024 11.2194Z'
				fill='white'
			/>
			<path
				d='M59.586 11.2188C55.3673 11.2188 52.5625 15.0202 52.5625 19.2621C52.5625 21.9742 54.2314 24.1762 57.3839 24.1762C61.5331 24.1762 64.3146 20.4675 64.3146 16.1329C64.3378 13.6063 62.8775 11.2188 59.586 11.2188ZM57.8707 21.4642C56.6653 21.4642 56.1785 20.4443 56.1785 19.1694C56.1785 17.1528 57.2216 13.8844 59.1224 13.8844C60.3741 13.8844 60.7681 14.9507 60.7681 15.9938C60.7681 18.1727 59.7251 21.4642 57.8707 21.4642Z'
				fill='white'
			/>
			<path
				d='M73.305 11.2188C70.9407 11.2188 69.5963 13.3049 69.5963 13.3049H69.5499L69.7585 11.4274H66.6525C66.4902 12.7023 66.212 14.6262 65.9339 16.0865L63.5 28.8817H67.0001L67.9737 23.6895H68.0432C68.0432 23.6895 68.7618 24.1531 70.1062 24.1531C74.2322 24.1531 76.9211 19.9343 76.9211 15.6693C76.9211 13.3281 75.878 11.2188 73.305 11.2188ZM69.9672 21.5337C69.0631 21.5337 68.53 21.0238 68.53 21.0238L69.1095 17.7554C69.5267 15.5765 70.6626 14.1162 71.8679 14.1162C72.9342 14.1162 73.2587 15.113 73.2587 16.0401C73.2587 18.2886 71.9143 21.5337 69.9672 21.5337Z'
				fill='white'
			/>
			<path
				d='M81.9309 6.18945C80.8182 6.18945 79.9141 7.07038 79.9141 8.2295C79.9141 9.27271 80.5632 9.99136 81.56 9.99136H81.6064C82.696 9.99136 83.6464 9.24953 83.6696 7.95131C83.6928 6.90811 82.9973 6.18945 81.9309 6.18945Z'
				fill='white'
			/>
			<path
				d='M77.0156 23.9204H80.539L82.9265 11.4961H79.38L77.0156 23.9204Z'
				fill='white'
			/>
			<path
				d='M91.8301 11.4737H89.3962L89.5121 10.8942C89.7208 9.68887 90.4162 8.6226 91.5983 8.6226C92.2242 8.6226 92.7109 8.80804 92.7109 8.80804L93.4063 6.07282C93.4063 6.07282 92.8037 5.77148 91.5056 5.77148C90.2539 5.77148 89.0254 6.11918 88.075 6.93047C86.8696 7.95038 86.3133 9.41071 86.0352 10.8942L85.9425 11.4737H84.3199L83.8099 14.1162H85.4325L83.5781 23.9212H87.0783L88.9327 14.1162H91.3433L91.8301 11.4737Z'
				fill='white'
			/>
			<path
				d='M100.26 11.4961C100.26 11.4961 98.0584 17.0129 97.0849 20.0262H97.0385C96.969 19.0527 96.1808 11.4961 96.1808 11.4961H92.4953L94.6046 22.9005C94.651 23.1555 94.6278 23.3178 94.5351 23.48C94.1178 24.2681 93.4456 25.0331 92.6343 25.5894C91.9853 26.0762 91.2436 26.3775 90.6641 26.5861L91.6376 29.5531C92.3562 29.3909 93.8165 28.8114 95.0682 27.6524C96.6676 26.1457 98.1511 23.8509 99.6578 20.6985L103.946 11.4961H100.26V11.4961Z'
				fill='white'
			/>
			<path
				d='M17.7924 3.431C17.7924 3.431 17.4678 3.52372 16.9347 3.68598C16.842 3.38464 16.7029 3.03695 16.5175 2.66607C15.9148 1.50708 15.0108 0.88123 13.9445 0.88123C13.875 0.88123 13.8054 0.88123 13.7127 0.904409C13.6895 0.85805 13.6432 0.83487 13.62 0.788511C13.1564 0.278556 12.5537 0.0467579 11.8352 0.0699376C10.4444 0.116297 9.05359 1.11303 7.94096 2.89787C7.15285 4.14958 6.55018 5.7258 6.38792 6.95433C4.78851 7.4411 3.67589 7.7888 3.65271 7.81198C2.84141 8.06696 2.81823 8.09014 2.72552 8.85507C2.65598 9.43457 0.523438 25.7531 0.523438 25.7531L18.0473 28.7897V3.40782C17.9083 3.40782 17.8387 3.431 17.7924 3.431ZM13.7359 4.68271C12.8087 4.96087 11.7888 5.28539 10.7921 5.58672C11.0702 4.49727 11.6265 3.40782 12.2756 2.68925C12.5306 2.43427 12.8783 2.13294 13.2723 1.9475C13.6664 2.78197 13.7591 3.91778 13.7359 4.68271ZM11.8352 1.02031C12.1597 1.02031 12.4378 1.08985 12.6696 1.22893C12.2988 1.41436 11.9279 1.7157 11.5802 2.0634C10.6994 3.01377 10.0271 4.49727 9.74898 5.91124C8.91451 6.16622 8.08004 6.42119 7.31511 6.65299C7.82506 4.42773 9.70262 1.06667 11.8352 1.02031ZM9.14631 13.7692C9.23903 15.2527 13.1564 15.5772 13.3882 19.0774C13.5505 21.8357 11.9279 23.7133 9.58673 23.8524C6.7588 24.0378 5.20575 22.3689 5.20575 22.3689L5.80842 19.8191C5.80842 19.8191 7.36147 21.0013 8.61318 20.9086C9.42447 20.8622 9.72581 20.19 9.70263 19.7264C9.58673 17.7793 6.38792 17.8952 6.1793 14.6964C5.99386 12.0075 7.75552 9.29549 11.6497 9.04051C13.1564 8.94779 13.9213 9.31867 13.9213 9.31867L13.0405 12.6566C13.0405 12.6566 12.0438 12.193 10.8616 12.2857C9.14631 12.4016 9.12313 13.491 9.14631 13.7692ZM14.6631 4.40455C14.6631 3.70916 14.5704 2.71243 14.2459 1.87796C15.3121 2.08658 15.8221 3.26875 16.0539 3.98732C15.6366 4.10322 15.173 4.2423 14.6631 4.40455Z'
				fill='white'
			/>
			<path
				d='M18.5781 28.7429L25.8566 26.9349C25.8566 26.9349 22.7273 5.77173 22.7041 5.63265C22.6809 5.49357 22.565 5.40085 22.4491 5.40085C22.3332 5.40085 20.2934 5.35449 20.2934 5.35449C20.2934 5.35449 19.0417 4.14914 18.5781 3.68555V28.7429Z'
				fill='white'
			/>
		</g>
		<defs>
			<clipPath id='clip0_2293_256'>
				<rect
					width='103.451'
					height='29.5542'
					fill='white'
					transform='translate(0.453125)'
				/>
			</clipPath>
		</defs>
	</svg>
)

export { LogoCarousel }
